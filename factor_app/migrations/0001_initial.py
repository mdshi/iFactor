# Generated by Django 3.1 on 2020-08-12 17:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import factor_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('account_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('account_number', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('account_name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('account_description', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('account_type', models.SmallIntegerField(blank=True, choices=[(1, 'Asset'), (2, 'Liability'), (3, 'Capital')], default=None, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('client_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('client_name', models.CharField(max_length=255)),
                ('dba_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('address_1', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('address_2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('city', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('state', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('zip', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('country', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('mailing_address_1', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('mailing_address_2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('mailing_city', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('mailing_state', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('mailing_zip', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('mailing_country', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('docket', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('dot_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('ein', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('business_type', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('is_broker', models.BooleanField(default=False)),
                ('business_start_date', models.DateField(blank=True, default=None, null=True)),
                ('funding_start_date', models.DateField(blank=True, default=None, null=True)),
                ('funding_end_date', models.DateField(blank=True, default=None, null=True)),
                ('business_phone', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('business_fax', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('business_email', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('number_of_trucks', models.IntegerField(blank=True, default=None, null=True)),
                ('hold_reserves', models.BooleanField(default=False)),
                ('credit_limit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('estimated_grp', models.DecimalField(decimal_places=2, max_digits=4)),
                ('estimated_volume', models.DecimalField(decimal_places=2, max_digits=10)),
                ('authority_status', models.BooleanField(default=True)),
                ('insurance_status', models.BooleanField(default=True)),
                ('insurance_expiration_date', models.DateField()),
                ('ucc_filing_date', models.DateField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('account_manager', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClientContact',
            fields=[
                ('contact_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('can_move_money', models.BooleanField(default=False)),
                ('pin', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='factor_app.client')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Debtor',
            fields=[
                ('debtor_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('name', models.CharField(max_length=255)),
                ('status', models.SmallIntegerField(choices=[(1, 'Good'), (2, 'No Load')], default=1)),
                ('docket', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('dot_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('address_1', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('address_2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('city', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('state', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('zip', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('country', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('business_phone', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('business_fax', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('business_email', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('fax_noa', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('fax_statement', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('fax_invoice', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('email_noa', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('email_invoice', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('email_statement', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('email_subject', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('billing_option', models.SmallIntegerField(choices=[(1, 'Email'), (2, 'Mail Copy'), (3, 'Mail Original'), (4, 'Fax'), (5, 'Upload to site')], default=1)),
                ('originals_required', models.BooleanField(default=False)),
                ('credit_limit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('credit_score', models.DecimalField(decimal_places=2, max_digits=10)),
                ('invoice_upload_website', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('invoice_upload_user', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('invoice_upload_password', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('parent', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='factor_app.debtor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DisbursementRequest',
            fields=[
                ('request_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('request_type', models.SmallIntegerField(choices=[(1, 'Wire'), (2, 'ACH'), (3, 'Check'), (4, 'Transcheck'), (5, 'Fuel card'), (6, 'Internal transfer')], default=3)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11)),
                ('date_requested', models.DateTimeField(auto_now_add=True)),
                ('reference_number', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('check_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('check_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_granted', models.BooleanField(default=False)),
                ('is_cleared', models.BooleanField(default=False)),
                ('notes', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('client', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='factor_app.client')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('invoice_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('invoice_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('load_number', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('bol_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=11)),
                ('is_fuel_advance', models.BooleanField(default=False)),
                ('purchase_option', models.SmallIntegerField(choices=[(1, 'Express'), (2, 'Priority'), (3, 'Standard')], default=3)),
                ('processing_stage', models.SmallIntegerField(choices=[(1, 'New'), (2, 'Awaiting Document'), (3, 'Ready to Purchase'), (4, 'Held for Credit'), (5, 'Held for Document'), (6, 'Fuel Advance (Request Pending)'), (7, 'Fuel Advance (Advanced)'), (8, 'Purchased at 0 %'), (9, 'Funded')], default=1)),
                ('is_document_ready', models.BooleanField(default=False)),
                ('invoice_status', models.SmallIntegerField(choices=[(1, 'Pending'), (2, 'Open'), (3, 'Closed')], default=1)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('date_submitted', models.DateTimeField(blank=True, default=None, null=True)),
                ('date_processed', models.DateTimeField(blank=True, default=None, null=True)),
                ('date_funded', models.DateTimeField(blank=True, default=None, null=True)),
                ('date_due', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_locked', models.BooleanField(default=False)),
                ('is_on_hold', models.BooleanField(default=False)),
                ('is_charged_back', models.BooleanField(default=False)),
                ('job_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('load_lable', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('track_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('pickup_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('pickup_address', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('pickup_city', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('pickup_state', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('pickup_zip', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('delivery_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('delivery_address', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('delivery_city', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('delivery_state', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('delivery_zip', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('memo', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('document_path', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('document_file_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('billing_status', models.BooleanField(default=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='factor_app.client')),
                ('debtor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='factor_app.debtor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MiscCharge',
            fields=[
                ('misc_charge_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('misc_charge_type', models.SmallIntegerField(choices=[(1, 'Quick pay fee'), (2, 'Paperwork delivery fee'), (3, 'Stop check fee'), (4, 'Other')], default=4)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11)),
                ('note', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('charge_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OverAdvance',
            fields=[
                ('over_advance_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('over_advance_date', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11)),
                ('due_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_closed', models.BooleanField(default=False)),
                ('date_closed', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_extended', models.BooleanField(default=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='factor_app.client')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('receipt_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('batch_number', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('receipt_type', models.SmallIntegerField(choices=[(1, 'Wire'), (2, 'ACH'), (3, 'Check'), (4, 'Credit card')], default=3)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=11)),
                ('date_received', models.DateTimeField(auto_now_add=True)),
                ('reference_number', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('check_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('check_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_posted', models.BooleanField(default=False)),
                ('receipt_notes', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('check_image_file_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('remittance_file_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('client', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='factor_app.client')),
                ('debtor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='factor_app.debtor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesBroker',
            fields=[
                ('sales_broker_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('first_name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('middle_name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('address_1', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('address_2', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('city', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('state', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('country', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('cell_phone', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('company_name', models.CharField(blank=True, default=None, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Terms',
            fields=[
                ('terms_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('advance_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('security_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('invoice_fee', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('transaction_fee_rate_type', models.SmallIntegerField(choices=[(1, 'Flat'), (2, 'Daily'), (3, 'Bucket')], default=1)),
                ('flat_rate', models.DecimalField(decimal_places=4, default=0, max_digits=6)),
                ('daily_rate', models.DecimalField(decimal_places=4, default=0, max_digits=6)),
                ('express_processing_fee', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('priority_processing_fee', models.DecimalField(decimal_places=2, max_digits=4)),
                ('standard_processing_fee', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('fuel_advance_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('fuel_advance_fee_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('fuel_advance_days', models.IntegerField(default=0)),
                ('over_advance_fee_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('over_advance_days', models.IntegerField(default=0)),
                ('check_fee', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('wire_fee', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('transcheck_fee', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('ach_fee', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('fuel_card_fee', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('carrier_quck_pay_fee', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('paperwork_delivery_fee', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('postage_fee', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('release_days', models.IntegerField(default=0)),
                ('recourse_days', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transcheck',
            fields=[
                ('transcheck_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('account_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('batch_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('transaction_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('book_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('expiration_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('code_used', models.BooleanField(default=False)),
                ('money_code', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('disbursement_request', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='factor_app.disbursementrequest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transaction_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('transaction_source', models.SmallIntegerField(choices=[(1, 'Invoice'), (2, 'Receipt'), (3, 'Payment application'), (4, 'Disbursement'), (5, 'Over advance'), (6, 'Misc charge'), (7, 'Pass through'), (8, 'Write off')])),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('transaction_type', models.SmallIntegerField(choices=[(1, 'Funding'), (2, 'Invoice adjustment'), (3, 'Fee adjustment'), (4, 'Recourse'), (5, 'Close out'), (6, 'Reserve release'), (7, 'Receipt'), (8, 'Payment application'), (9, 'Reversal'), (10, 'Dusbursement request'), (11, 'Misc charge'), (12, 'Pass through'), (13, 'Write off')])),
                ('transaction_note', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('disbursement', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='factor_app.disbursementrequest')),
                ('invoice', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='factor_app.invoice')),
                ('misc_charges', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='factor_app.misccharge')),
                ('over_advance', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='factor_app.overadvance')),
                ('receipt', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='factor_app.receipt')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProcessingNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('hold_reason', models.SmallIntegerField(blank=True, choices=[(1, 'Document'), (2, 'Client Credit'), (3, 'Debtor Credit'), (4, 'Other')], default=None, null=True)),
                ('note', models.CharField(max_length=255)),
                ('is_alert', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('show_client', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_note', to='factor_app.invoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OverAdvanceNote',
            fields=[
                ('over_advance_note_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('note', models.CharField(max_length=255)),
                ('over_advance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='factor_app.overadvance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='overadvance',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='factor_app.terms'),
        ),
        migrations.CreateModel(
            name='NOA',
            fields=[
                ('noa_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('is_customized', models.BooleanField(default=False)),
                ('is_debtor_notified', models.BooleanField(default=False)),
                ('debtor_notification_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='factor_app.client')),
                ('debtor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='factor_app.debtor')),
                ('terms', models.ForeignKey(blank=True, default=factor_app.models.Client.default_term, null=True, on_delete=django.db.models.deletion.PROTECT, to='factor_app.terms')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ledger',
            fields=[
                ('ledger_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11)),
                ('credit', models.DecimalField(decimal_places=2, max_digits=11)),
                ('debit', models.DecimalField(decimal_places=2, max_digits=11)),
                ('Transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='factor_app.transaction')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='factor_app.account')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceLineItems',
            fields=[
                ('invoice_line_item_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('line_item', models.SmallIntegerField(choices=[(1, 'Rate'), (2, 'Lumper Fee'), (3, 'Detention'), (4, 'Less Cash'), (5, 'Otehr')], default=1)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='line_items', to='factor_app.invoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='noa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='factor_app.noa'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='terms',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='factor_app.terms'),
        ),
        migrations.CreateModel(
            name='FundingAccount',
            fields=[
                ('funding_account_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('vendor_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('vendor_nick_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('address_1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('address_2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('city', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('state', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('zip', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('country', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('bank_name', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('bank_routing_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('bank_account_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('bank_address_1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('bank_address_2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('bank_city', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('bank_state', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('bank_zip', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('bank_country', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_fuel_card', models.BooleanField(default=False)),
                ('wire_allowed', models.BooleanField(default=0)),
                ('ach_allowed', models.BooleanField(default=False)),
                ('check_allowed', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_default', models.BooleanField(default=False)),
                ('note', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('is_fee_customized', models.BooleanField(default=False)),
                ('customized_fee_amount', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('max_withdraw', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='factor_app.client')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='disbursementrequest',
            name='funding_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='factor_app.fundingaccount'),
        ),
        migrations.CreateModel(
            name='DebtorNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('debtor_note', models.CharField(max_length=255)),
                ('is_alert', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('show_client', models.BooleanField(default=False)),
                ('debtor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debtor_memo', to='factor_app.debtor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DebtorContact',
            fields=[
                ('contact_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('first_name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('middle_name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('address_1', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('address_2', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('city', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('state', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('zip', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('country', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('cell_phone', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('contact_position', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('contact_role', models.SmallIntegerField(choices=[(1, 'Owner'), (2, 'Employee'), (3, 'Accounts Payable'), (4, 'Dispatch'), (5, 'Other')], default=1)),
                ('allow_portal_access', models.BooleanField(default=False)),
                ('portal_access_login', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('portal_access_password', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('debtor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='factor_app.debtor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CollectionNote',
            fields=[
                ('collection_note_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('debtor_response', models.SmallIntegerField(choices=[(1, 'Expected to pay'), (2, 'Paid'), (3, 'Claim'), (4, 'Document required'), (5, 'Debtor will not pay'), (6, 'Other')], default=6)),
                ('note', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('payment_date', models.DateTimeField()),
                ('invoice', models.ManyToManyField(to='factor_app.Invoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClientNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('client_note', models.CharField(max_length=255)),
                ('is_alert', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('show_processing', models.BooleanField(default=False)),
                ('show_account_managers', models.BooleanField(default=False)),
                ('show_collections', models.BooleanField(default=False)),
                ('show_payments', models.BooleanField(default=False)),
                ('show_client', models.BooleanField(default=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_memo', to='factor_app.client')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClientDocument',
            fields=[
                ('client_document_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('document_type', models.SmallIntegerField(choices=[(1, 'Contract'), (2, 'Company Credit'), (3, 'Personal Credit'), (4, 'Drivers License'), (5, 'GRP'), (6, 'Entity'), (7, 'Insurance'), (8, 'Authority'), (9, '8821'), (10, 'UCC Search'), (11, 'UCC Filed'), (12, 'W9'), (13, 'Bankruptcy'), (14, 'Signature'), (15, 'NOA'), (16, 'Other')], default=16)),
                ('document_description', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('file_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('file_extension', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('file_size', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='factor_app.client')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClientContactAccount',
            fields=[
                ('contact_account_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('first_name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('middle_name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('address_1', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('address_2', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('city', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('state', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('zip', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('country', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('cell_phone', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('contact_type', models.SmallIntegerField(choices=[(1, 'Owner'), (2, 'Employee'), (3, 'Other')], default=1)),
                ('login', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('password', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('pin', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('client', models.ManyToManyField(through='factor_app.ClientContact', to='factor_app.Client')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='clientcontact',
            name='client_contact_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='factor_app.clientcontactaccount'),
        ),
        migrations.AddField(
            model_name='client',
            name='debtor',
            field=models.ManyToManyField(through='factor_app.NOA', to='factor_app.Debtor'),
        ),
        migrations.AddField(
            model_name='client',
            name='primary_salesperson',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='salesperson_primary', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='client',
            name='sales_broker',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='factor_app.salesbroker'),
        ),
        migrations.AddField(
            model_name='client',
            name='secondary_salesperson',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='salesperson_secondary', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='client',
            name='terms',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='factor_app.terms'),
        ),
        migrations.CreateModel(
            name='BucketRate',
            fields=[
                ('bucket_rate_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('level', models.SmallIntegerField()),
                ('min_days', models.SmallIntegerField()),
                ('max_days', models.SmallIntegerField()),
                ('percentage_rate', models.DecimalField(decimal_places=2, max_digits=4)),
                ('terms', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='factor_app.terms')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BillingTask',
            fields=[
                ('invoice_delivery_task_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('deleted', models.UUIDField(blank=True, default=None, null=True)),
                ('billing_option', models.SmallIntegerField(default=1, verbose_name=factor_app.models.BillingOption)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_delivered', models.BooleanField(default=False)),
                ('date_delivered', models.DateTimeField(blank=True, default=None, null=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='factor_app.invoice')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
